@model ContentModel

@{
    ViewData["Title"] = "Generate Json";

    var selectedImageList = Model.MyFiles.Where(x => x.IsSelected == true).ToList();
    var unSelectedImageList = Model.MyFiles.Where(x => x.IsSelected == false).ToList();
}

<script src="~/lib/jquery/dist/jquery.js"></script>

<style>

    .lighter {
        filter: brightness(150%);
        opacity: 1;
        background-color: #2C7FD2;
    }

    .box {
        width: 100px;
        height: 100px;
        margin: 20px;
        border: 0px solid #ff6703;
        padding: 5px;
    }

    #dragtarget img {
        margin-top: 10px;
        margin-bottom: 10px;
    }

    .selectedbox {
        background-color: gainsboro;
        opacity: 0.4;
        border: 5px solid #ff6703;
    }

    .card-img-top {
        width: 100px;
        height: 100px;
    }

    .card-title {
        font-size: 12px;
    }

    .card-text {
        font-size: 10px;
    }

    #geturl div {
        overflow-wrap: break-word;
        word-wrap: break-word;
        -ms-word-break: break-all;
        /* This is the dangerous one in WebKit, as it breaks things wherever */
        word-break: break-all;
        /* Instead use this non-standard one: */
        word-break: break-word;
        /* Adds a hyphen where the word breaks, if supported (No Blink) */
        -ms-hyphens: auto;
        -moz-hyphens: auto;
        -webkit-hyphens: auto;
        hyphens: auto;
    }

    #urltext {
        height: 0px;
        border-width: 0px;
    }

    #dragsource {
        margin-top: 10px;
    }
</style>

<script>

    function fileSelected() {
        var getIds = [];
        $("#dragtarget img").each(function () {
            getIds.push(this.id);
        });

        //return btoa(getIds.join());
        return getIds.join();
    }

    function params()
    {
        var pupr = $("div.btn-group button.btn-warning").text();
        var pro = $("#profile").val();
        var par = fileSelected() + "|" + pupr + "|" + pro;

        return btoa(par);
    }

    function paramsRemoveFile(id)
    {
        var pupr = $("div.btn-group button.btn-warning").text();
        var pro = $("#profile").val();
        var par = fileSelected() + "|" + id + "|" + pupr + "|" + pro;

        return btoa(par);
    }


    function removeFromSelectionList(id) {
        location.href = '@Url.Action("RemoveFromSelectionList", "Home")?pars=' + paramsRemoveFile(id);
    };


    function addToSelectionList() {
        location.href = '@Url.Action("AddToSelectionList", "Home")?pars=' + params();
    };

    function copylink() {
        $("#urltext").val($("#geturl div").text().trim());
        var copyText = $("#urltext");
        copyText.select();
        document.execCommand("copy");
        $("#copybutton").text("Copied!");
        $("#copybutton").prop("disabled", true);
    }

    $(document).ready(function () {

    $("img.border-danger").click(function () {
        if ($(this).parent().attr("id") != "dragtarget")
        {
            $(this).hide().appendTo("#dragtarget").show('slow');
            addToSelectionList();
        }
        else
        {
            if ($(this).hasClass("private")) {
                $(this).hide().appendTo("#sourcePrivate").show('slow');
            }
            if ($(this).hasClass("public"))  {
                $(this).hide().appendTo("#sourcePublic").show('slow');
            }
            removeFromSelectionList($(this).attr("id"));
        }
    });

    $("#btnPublic").click(function () {
        $("#collapsePrivate").removeClass("show");
        $(this).toggleClass("btn-secondary").toggleClass("btn-warning");
        $("#btnPrivate").addClass("btn-secondary").removeClass("btn-warning");
    });

    $("#btnPrivate").click(function () {
        $("#collapsePublic").removeClass("show");
        $(this).toggleClass("btn-secondary").toggleClass("btn-warning").addClass("show");
        $("#btnPublic").addClass("btn-secondary").removeClass("btn-warning");
    });

    $("#go").click(function () {
        window.open('@Model.ApiGetUrl','_blank');
    });

    $("img").hover(function () {
        $(this).toggleClass("lighter");
    });

    });
</script>

<form asp-controller="Home" asp-action="Register" method="post">
    <div class="container-fluid">
        <div class="row">
            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <span class="input-group-text" id="basic-addon1">Profile: </span>
                </div>
                <input type="text" id="profile" value="@Model.Profile" class="form-control" placeholder="give a name to identify your image group" aria-label="Username" aria-describedby="basic-addon1">
            </div>
        </div>
        <div class="row">
            <div class=" btn-group" role="group" aria-label="image buttons">
                @{
                    string PublicSelected = (Model.TypeSelected == "Public") ? "btn-warning" : "btn-secondary";
                    string PrivateSelected = (Model.TypeSelected == "Private") ? "btn-warning" : "btn-secondary";
                }
                <button type="button" id="btnPublic" class="btn @PublicSelected" data-toggle="collapse" data-target="#collapsePublic" aria-expanded="false" aria-controls="collapsePublic">Public</button>
                <button type="button" id="btnPrivate" class="btn @PrivateSelected" data-toggle="collapse" data-target="#collapsePrivate" aria-expanded="false" aria-controls="collapsePrivate">Private</button>
                <div class="card">
                    <div class="card-body">
                        Click on to add to your list
                    </div>
                </div>
            </div>
        </div>
        <br />
        <br />
        <div class="row">
            @{
                string ShowPublic = "";
                string ShowPrivate = "";
                if (!string.IsNullOrEmpty(Model.TypeSelected))
                {
                    ShowPublic = (Model.TypeSelected == "Public") ? "show" : "";
                    ShowPrivate = (Model.TypeSelected == "Private") ? "show" : "";
                }
            }
            <div class="collapse @(ShowPublic)" id="collapsePublic">
                <div class="col-12 d-flex flex-row border flex-wrap" id="sourcePublic">
                    @foreach (var file in unSelectedImageList.Where(x => !x.IsPrivate))
                    {
                        <img class="box rounded border border-danger public" src="@Helper.DecodeImage(file.Content)" alt="@file.Name" id="@file.Name">
                    }
                </div>
            </div>
            <div class="collapse @(ShowPrivate)" id="collapsePrivate">
                <div class="col-12 d-flex flex-row border flex-wrap" id="sourcePrivate">
                    @foreach (var file in unSelectedImageList.Where(x => x.IsPrivate))
                    {
                        <img class="box rounded border border-danger private" src="@Helper.DecodeImage(file.Content)" alt="@file.Name" id="@file.Name">
                    }
                </div>
            </div>
        </div>
        <br />
        <br />
        @if (selectedImageList.Any())
        {
            <div class="row">
                <div class="col-12 alert alert-info" role="alert">
                    Your selection: click on to remove from the list.
                </div>
            </div>
        }
        <div class="row">
            <div class="col-12 d-flex flex-row border flex-wrap" id="dragtarget">
                @foreach (var file in selectedImageList)
                {
                    <img class="box rounded border border-danger" src="@Helper.DecodeImage(file.Content)" alt="@file.Name" id="@file.Name">
                }
            </div>
        </div>
        <br />
        <br />
        @if (selectedImageList.Any())
        {
            <br />
            <br />
            <div class="row">
                <a class="col-12 btn btn-info" data-toggle="collapse" href="#geturl" role="button" aria-expanded="false" aria-controls="geturl">
                    Show me the url
                </a>
            </div>
            <br />
            <div class="row">
                <div class="col-12 collapse" id="geturl">
                    <div class="alert alert-info" role="alert">
                        @Model.ApiGetUrl
                    </div>
                    @{
                        string pars= Model.ApiGetUrl.Split("/")[Model.ApiGetUrl.Split("/").Length - 1];
                    }
                    <button class="col-12 btn btn-outline-secondary" id="go">Go!</button>
                    <input type="text" readonly="readonly" id="urltext" />
                </div>
            </div>
            @Html.ActionLink("click", "ClientCarousel", new { @pars = pars })
        }
    </div>
</form>